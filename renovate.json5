{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    'docker:enableMajor',
    'replacements:k8s-registry-move',
    ':automergeBranch',
    ':disableRateLimiting',
    ':dependencyDashboard',
    ':semanticCommits',
    ':skipStatusChecks',
    ':timezone(America/New_York)',
  ],
  argocd: {
    managerFilePatterns: [
      '/(^|/)base/.+\\.yaml$/',
      '/(^|/)clusters/.+\\.yaml$/',
    ],
  },
  flux: {
    managerFilePatterns: [
      '/(^|/)kubernetes/.+\\.yaml$/',
    ],
  },
  'helm-values': {
    // Detects Helm chart values in YAML files
    // - base/: only helm-values.yaml files (ArgoCD Helm values)
    // - kubernetes/: all YAML files (legacy Flux inline values)
    managerFilePatterns: [
      '/(^|/)base/.+/helm-values\\.yaml$/',
      '/(^|/)kubernetes/.+\\.yaml$/',
    ],
  },
  kubernetes: {
    managerFilePatterns: [
      '/(^|/)\\.taskfiles/.+\\.yaml$/',
      '/(^|/)kubernetes/.+\\.yaml$/',
      '/(^|/)base/.+\\.yaml$/',
      '/(^|/)clusters/.+\\.yaml$/',
    ],
  },
  ignorePaths: [
    '**/*.sops.*',
    '**/.archive/**',
  ],
  hostRules: [
    {
      description: 'Use GitHub token for GHCR authentication',
      hostType: 'docker',
      matchHost: 'ghcr.io',
    },
  ],
  customManagers: [
    {
      customType: 'regex',
      description: 'Handle OCI Helm charts in ArgoCD Applications',
      managerFilePatterns: [
        '/^base/.+\\.yaml$/',
        '/^clusters/.+\\.yaml$/',
      ],
      matchStrings: [
        '(?:-\\s+)?repoURL:\\s+oci://(?<depName>ghcr\\.io/[^\\s]+)\\s+targetRevision:\\s+(?<currentValue>[^\\s]+)',
      ],
      datasourceTemplate: 'docker',
    },
  ],
  packageRules: [
    {
      description: 'Disable ArgoCD manager git-tags detection for OCI Helm charts (handled by regex manager)',
      matchManagers: [
        'argocd',
      ],
      matchDatasources: [
        'git-tags',
      ],
      enabled: false,
      matchPackageNames: [
        '/^oci://ghcr\\.io//',
      ],
    },
    {
      description: 'Custom versioning for miniflux',
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>)$',
      matchPackageNames: [
        '/miniflux/',
      ],
    },
    {
      matchUpdateTypes: [
        'minor',
        'patch',
      ],
      matchCurrentVersion: '!/^0/',
      automerge: true,
    },
    {
      description: 'Update renovate only daily',
      extends: [
        'schedule:daily',
      ],
      matchDepNames: [
        'ghcr.io/renovatebot/renovate',
      ],
    },
  ],
}
