apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: default
  sources:
    - chart: kube-prometheus-stack
      repoURL: https://prometheus-community.github.io/helm-charts
      targetRevision: 77.0.2
      helm:
        releaseName: kube-prometheus-stack
        values: |
          crds:
            enabled: true
            upgradeJob:
              enabled: true
              forceConflicts: true
          cleanPrometheusOperatorObjectNames: true

          alertmanager:
            enabled: false

          kubeApiServer:
            enabled: true
            endpoints:
              - 10.1.0.20
              - 10.1.0.21
              - 10.1.0.22
            serviceMonitor:
              metricRelabelings:
                # Drop high cardinality labels
                - action: drop
                  sourceLabels:
                    - "__name__"
                  regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
                - action: drop
                  sourceLabels:
                    - "__name__"
                  regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)

          kubeControllerManager:
            enabled: false

          kubeEtcd:
            enabled: true
            endpoints:
              - 10.1.0.20
              - 10.1.0.21
              - 10.1.0.22

          kubeScheduler:
            enabled: false

          kubeProxy:
            enabled: false

          kubelet:
            enabled: true
            serviceMonitor:
              metricRelabelings:
                # Drop high cardinality labels
                - action: labeldrop
                  regex: (uid)
                - action: labeldrop
                  regex: (id|name)
                - action: drop
                  sourceLabels:
                    - "__name__"
                  regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

          prometheus:
            ingress:
              enabled: true
              ingressClassName: nginx
              pathType: Prefix
              hosts: ["prometheus.internal"]
            prometheusSpec:
              # replicas: 3
              # replicaExternalLabelName: __replica__
              nodeSelector:
                opi.feature.node.kubernetes.io/5plus: "true"

              podMonitorSelectorNilUsesHelmValues: false
              probeSelectorNilUsesHelmValues: false
              ruleSelectorNilUsesHelmValues: false
              scrapeConfigSelectorNilUsesHelmValues: false
              serviceMonitorSelectorNilUsesHelmValues: false

              scrapeInterval: 1m # Must match interval in Grafana Helm chart

              enableAdminAPI: true
              walCompression: true
              enableFeatures:
                - memory-snapshot-on-shutdown
              retention: 7d
              retentionSize: 30GB
              externalLabels:
                cluster: main
              resources:
                requests:
                  cpu: 100m
                limits:
                  cpu: 4
                  memory: 4000Mi
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    # storageClassName: openebs-hostpath
                    storageClassName: longhorn
                    resources:
                      requests:
                        storage: 30Gi

          nodeExporter:
            enabled: true

          prometheus-node-exporter:
            fullnameOverride: node-exporter
            prometheus:
              monitor:
                enabled: true
                relabelings:
                  - action: replace
                    regex: (.*)
                    replacement: $1
                    sourceLabels: ["__meta_kubernetes_pod_node_name"]
                    targetLabel: kubernetes_node

          kube-state-metrics:
            fullnameOverride: kube-state-metrics
            metricLabelsAllowlist:
              - pods=[*]
              - deployments=[*]
              - persistentvolumeclaims=[*]
            prometheus:
              monitor:
                enabled: true
                relabelings:
                  - action: replace
                    regex: (.*)
                    replacement: $1
                    sourceLabels: ["__meta_kubernetes_pod_node_name"]
                    targetLabel: kubernetes_node

          grafana:
            enabled: false
            forceDeployDashboards: true
    - path: base/infra/observability/kube-prometheus-stack
      repoURL: https://forge.internal/nemo/home-ops.git
      targetRevision: HEAD
  destination:
    namespace: observability
    name: 'in-cluster'
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true